// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UpCourse.DataAccess;

namespace UpCourse.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210728131604_CourseProperties")]
    partial class CourseProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("UpCourse.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseSourceId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CourseSourceId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("UpCourse.Entities.CourseAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CourseAuthors");
                });

            modelBuilder.Entity("UpCourse.Entities.CourseSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PlatformName")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CourseSources");
                });

            modelBuilder.Entity("UpCourse.Entities.CourseUpvote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseUpvotes");
                });

            modelBuilder.Entity("UpCourse.Entities.Course", b =>
                {
                    b.HasOne("UpCourse.Entities.CourseAuthor", "Author")
                        .WithMany("Courses")
                        .HasForeignKey("AuthorId");

                    b.HasOne("UpCourse.Entities.CourseSource", "CourseSource")
                        .WithMany("Courses")
                        .HasForeignKey("CourseSourceId");

                    b.Navigation("Author");

                    b.Navigation("CourseSource");
                });

            modelBuilder.Entity("UpCourse.Entities.CourseUpvote", b =>
                {
                    b.HasOne("UpCourse.Entities.Course", null)
                        .WithMany("Upvotes")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("UpCourse.Entities.Course", b =>
                {
                    b.Navigation("Upvotes");
                });

            modelBuilder.Entity("UpCourse.Entities.CourseAuthor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("UpCourse.Entities.CourseSource", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
